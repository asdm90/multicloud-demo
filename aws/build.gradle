plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.0"
    id("io.micronaut.test-resources") version "3.6.0"
}

version = "0.1"
group = "aws"

repositories {
    mavenCentral()
}

dependencies {
    // shared code
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation(project(":app")) {
        exclude group:'com.h2database', module:'h2'
    }

    // SDK
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2")

    // metrics
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-cloudwatch")

    // tracing
    implementation("io.micronaut.tracing:micronaut-tracing-opentelemetry-http")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp")
    implementation("io.opentelemetry:opentelemetry-extension-aws")
    implementation("io.opentelemetry.contrib:opentelemetry-aws-xray")

    // object storage
    implementation("io.micronaut.objectstorage:micronaut-object-storage-aws:1.1.0")

    // secrets
    implementation("io.micronaut.aws:micronaut-aws-secretsmanager")

    // database
    implementation("io.micronaut.data:micronaut-data-jdbc")
    runtimeOnly("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly("mysql:mysql-connector-java")
}


application {
    mainClass.set("aws.AwsApplication")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("aws.*")
    }
    testResources {
        additionalModules.add("jdbc-mysql")
    }
}

graalvmNative.binaries.configureEach {
    jvmArgs("--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED")
}
